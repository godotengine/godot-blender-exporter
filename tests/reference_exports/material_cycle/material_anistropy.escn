[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);
    transmission = transmission * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = transmission;
    ior = IOR;
}



void vertex() {
	
}


void fragment() {
	// node: Tangent
	// type: ShaderNodeTangent
	
	// node: Principled BSDF
	// type: ShaderNodeBsdfPrincipled
	vec4 var1_BaseColor;
	var1_BaseColor = vec4(0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0);
	float var2_Subsurface;
	var2_Subsurface = 0.0;
	vec4 var3_SubsurfaceColor;
	var3_SubsurfaceColor = vec4(0.699999988079071, 0.10000000149011612, 0.10000000149011612, 1.0);
	float var4_Metallic;
	var4_Metallic = 1.0;
	float var5_Specular;
	var5_Specular = 0.5;
	float var6_Roughness;
	var6_Roughness = 0.12921348214149475;
	float var7_Clearcoat;
	var7_Clearcoat = 0.0;
	float var8_ClearcoatRoughness;
	var8_ClearcoatRoughness = 0.029999999329447746;
	float var9_Anisotropic;
	var9_Anisotropic = 1.0;
	float var10_Transmission;
	var10_Transmission = 0.0;
	float var11_IOR;
	var11_IOR = 1.4500000476837158;
	vec3 var12_out_albedo;
	float var13_out_sss_strength;
	float var14_out_metallic;
	float var15_out_specular;
	float var16_out_roughness;
	float var17_out_clearcoat;
	float var18_out_clearcoat_gloss;
	float var19_out_anisotropy;
	float var20_out_transmission;
	float var21_out_ior;
	node_bsdf_principled(var1_BaseColor, var2_Subsurface, var3_SubsurfaceColor, var4_Metallic, var5_Specular, var6_Roughness, var7_Clearcoat, var8_ClearcoatRoughness, var9_Anisotropic, var10_Transmission, var11_IOR, var12_out_albedo, var13_out_sss_strength, var14_out_metallic, var15_out_specular, var16_out_roughness, var17_out_clearcoat, var18_out_clearcoat_gloss, var19_out_anisotropy, var20_out_transmission, var21_out_ior);
	// convert from z-up to y-up
	TANGENT = mat3(vec3(1, 0, 0), vec3(0, 0, -1), vec3(0, 1, 0)) * TANGENT;
	// convert from world space to view space
	TANGENT = normalize(INV_CAMERA_MATRIX * vec4(TANGENT, 0.0)).xyz;
	
	ALBEDO = var12_out_albedo;
	SSS_STRENGTH = var13_out_sss_strength;
	SPECULAR = var15_out_specular;
	METALLIC = var14_out_metallic;
	ROUGHNESS = var16_out_roughness;
	CLEARCOAT = var17_out_clearcoat;
	CLEARCOAT_GLOSS = var18_out_clearcoat_gloss;
	// transmission usually does not work..
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * var20_out_transmission;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = oren_nayar_rougness
	ANISOTROPY = var19_out_anisotropy;
	TANGENT = normalize(cross(cross(TANGENT, NORMAL), NORMAL));
	BINORMAL = cross(TANGENT, NORMAL);
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="ArrayMesh"]

resource_name = "Cylinder"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 1.0, -1.0, 0.382683, -1.0, -0.92388, 0.0, -1.0, -1.0, 0.382683, 1.0, -0.92388, 0.707107, -1.0, -0.707107, 0.382683, -1.0, -0.92388, 0.707107, 1.0, -0.707107, 0.92388, -1.0, -0.382683, 0.707107, -1.0, -0.707107, 0.92388, 1.0, -0.382683, 1.0, -1.0, 4.37114e-08, 0.92388, -1.0, -0.382683, 1.0, 1.0, 4.37114e-08, 0.92388, -1.0, 0.382684, 1.0, -1.0, 4.37114e-08, 0.92388, 1.0, 0.382684, 0.707107, -1.0, 0.707107, 0.92388, -1.0, 0.382684, 0.707107, 1.0, 0.707107, 0.382683, -1.0, 0.92388, 0.707107, -1.0, 0.707107, 0.382683, 1.0, 0.92388, 1.50996e-07, -1.0, 1.0, 0.382683, -1.0, 0.92388, 1.50996e-07, 1.0, 1.0, -0.382683, -1.0, 0.92388, 1.50996e-07, -1.0, 1.0, -0.382683, 1.0, 0.92388, -0.707107, -1.0, 0.707107, -0.382683, -1.0, 0.92388, -0.707107, 1.0, 0.707107, -0.92388, -1.0, 0.382684, -0.707107, -1.0, 0.707107, -0.92388, 1.0, 0.382684, -1.0, -1.0, -1.19249e-08, -0.92388, -1.0, 0.382684, -1.0, 1.0, -1.19249e-08, -0.923879, -1.0, -0.382684, -1.0, -1.0, -1.19249e-08, -0.923879, 1.0, -0.382684, -0.707107, -1.0, -0.707107, -0.923879, -1.0, -0.382684, 0.707107, 1.0, -0.707107, -0.707107, 1.0, -0.707107, -0.707107, 1.0, 0.707107, -0.707107, 1.0, -0.707107, -0.382683, -1.0, -0.92388, -0.707107, -1.0, -0.707107, -0.382683, 1.0, -0.92388, 0.0, -1.0, -1.0, -0.382683, -1.0, -0.92388, 0.92388, -1.0, -0.382683, 0.382683, -1.0, 0.92388, -0.92388, -1.0, 0.382684, 0.382683, 1.0, -0.92388, 0.707107, 1.0, -0.707107, 0.707107, 1.0, -0.707107, 0.92388, 1.0, -0.382683, 0.92388, -1.0, -0.382683, 1.0, 1.0, 4.37114e-08, 0.92388, 1.0, 0.382684, 0.92388, 1.0, 0.382684, 0.707107, 1.0, 0.707107, 0.707107, -1.0, 0.707107, 0.707107, 1.0, 0.707107, 0.382683, 1.0, 0.92388, 0.382683, -1.0, 0.92388, 1.50996e-07, 1.0, 1.0, -0.382683, 1.0, 0.92388, -0.382683, 1.0, 0.92388, -0.707107, 1.0, 0.707107, -0.707107, -1.0, 0.707107, -0.92388, 1.0, 0.382684, -1.0, 1.0, -1.19249e-08, -1.0, 1.0, -1.19249e-08, -0.923879, 1.0, -0.382684, -0.923879, -1.0, -0.382684, -0.707107, 1.0, -0.707107, 0.382683, 1.0, -0.92388, 0.0, 1.0, -1.0, -0.382683, 1.0, -0.92388, -0.707107, 1.0, -0.707107, -0.923879, 1.0, -0.382684, -1.0, 1.0, -1.19249e-08, -1.0, 1.0, -1.19249e-08, -0.92388, 1.0, 0.382684, -0.382683, 1.0, 0.92388, 1.50996e-07, 1.0, 1.0, 0.382683, 1.0, 0.92388, 0.707107, 1.0, 0.707107, 0.707107, 1.0, 0.707107, 0.92388, 1.0, 0.382684, 1.0, 1.0, 4.37114e-08, 1.0, 1.0, 4.37114e-08, 0.92388, 1.0, -0.382683, 0.707107, 1.0, 0.707107, 0.92388, 1.0, -0.382683, -0.707107, 1.0, 0.707107, 1.50996e-07, 1.0, 1.0, 0.707107, 1.0, -0.707107, 1.50996e-07, 1.0, 1.0, 0.707107, 1.0, 0.707107, 0.707107, 1.0, -0.707107, -0.382683, 1.0, -0.92388, 0.0, 1.0, -1.0, -0.382683, -1.0, -0.92388, 0.0, -1.0, -1.0, 0.382683, -1.0, -0.92388, 0.707107, -1.0, -0.707107, 0.92388, -1.0, -0.382683, 0.92388, -1.0, -0.382683, 1.0, -1.0, 4.37114e-08, 0.92388, -1.0, 0.382684, 0.92388, -1.0, 0.382684, 0.707107, -1.0, 0.707107, 0.92388, -1.0, -0.382683, 0.707107, -1.0, 0.707107, 0.382683, -1.0, 0.92388, 1.50996e-07, -1.0, 1.0, -0.92388, -1.0, 0.382684, -0.382683, -1.0, 0.92388, -0.707107, -1.0, 0.707107, -0.92388, -1.0, 0.382684, -1.0, -1.0, -1.19249e-08, -0.923879, -1.0, -0.382684, -0.923879, -1.0, -0.382684, -0.707107, -1.0, -0.707107, -0.382683, -1.0, -0.92388, -0.92388, -1.0, 0.382684, -0.923879, -1.0, -0.382684, -0.382683, -1.0, -0.92388),
		Vector3Array(0.19509, 0.0, -0.980785, 0.19509, 0.0, -0.980785, 0.19509, 0.0, -0.980785, 0.55557, 0.0, -0.83147, 0.55557, 0.0, -0.83147, 0.55557, 0.0, -0.83147, 0.83147, 0.0, -0.55557, 0.83147, 0.0, -0.55557, 0.83147, 0.0, -0.55557, 0.980785, 0.0, -0.19509, 0.980785, 0.0, -0.19509, 0.980785, 0.0, -0.19509, 0.980785, 0.0, 0.19509, 0.980785, 0.0, 0.19509, 0.980785, 0.0, 0.19509, 0.831469, 0.0, 0.55557, 0.831469, 0.0, 0.55557, 0.831469, 0.0, 0.55557, 0.55557, 0.0, 0.83147, 0.55557, 0.0, 0.83147, 0.55557, 0.0, 0.83147, 0.19509, 0.0, 0.980785, 0.19509, 0.0, 0.980785, 0.19509, 0.0, 0.980785, -0.19509, 0.0, 0.980785, -0.19509, 0.0, 0.980785, -0.19509, 0.0, 0.980785, -0.55557, 0.0, 0.83147, -0.55557, 0.0, 0.83147, -0.55557, 0.0, 0.83147, -0.831469, 0.0, 0.55557, -0.831469, 0.0, 0.55557, -0.831469, 0.0, 0.55557, -0.980785, 0.0, 0.19509, -0.980785, 0.0, 0.19509, -0.980785, 0.0, 0.19509, -0.980785, 0.0, -0.195091, -0.980785, 0.0, -0.195091, -0.980785, 0.0, -0.195091, -0.831469, 0.0, -0.55557, -0.831469, 0.0, -0.55557, -0.831469, 0.0, -0.55557, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -0.55557, 0.0, -0.83147, -0.55557, 0.0, -0.83147, -0.55557, 0.0, -0.83147, -0.19509, 0.0, -0.980785, -0.19509, 0.0, -0.980785, -0.19509, 0.0, -0.980785, 5.96046e-08, -1.0, 0.0, 5.96046e-08, -1.0, 0.0, 5.96046e-08, -1.0, 0.0, 0.19509, 0.0, -0.980785, 0.55557, 0.0, -0.83147, 0.83147, 0.0, -0.55557, 0.83147, 0.0, -0.55557, 0.83147, 0.0, -0.55557, 0.980785, 0.0, -0.19509, 0.980785, 0.0, 0.19509, 0.83147, 0.0, 0.55557, 0.83147, 0.0, 0.55557, 0.83147, 0.0, 0.55557, 0.55557, 0.0, 0.83147, 0.55557, 0.0, 0.83147, 0.55557, 0.0, 0.83147, 0.19509, 0.0, 0.980785, -0.19509, 0.0, 0.980785, -0.55557, 0.0, 0.83147, -0.55557, 0.0, 0.83147, -0.55557, 0.0, 0.83147, -0.831469, 0.0, 0.55557, -0.980785, 0.0, 0.19509, -0.980785, 0.0, -0.19509, -0.980785, 0.0, -0.19509, -0.980785, 0.0, -0.19509, -0.831469, 0.0, -0.55557, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.02308e-06, 1.0, 0.0, -1.02308e-06, 1.0, 0.0, -1.02308e-06, 1.0, 0.0, 1.43703e-06, 1.0, 0.0, 1.43703e-06, 1.0, 0.0, 1.43703e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 2.38419e-07, 1.0, 0.0, 2.38419e-07, 1.0, 0.0, 2.38419e-07, 1.0, 0.0, -0.55557, 0.0, -0.83147, -0.19509, 0.0, -0.980785, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.02308e-06, -1.0, 0.0, -1.02308e-06, -1.0, 0.0, -1.02308e-06, -1.0, 0.0, 1.43703e-06, -1.0, 0.0, 1.43703e-06, -1.0, 0.0, 1.43703e-06, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, -5.75593e-07, -1.0, 0.0, -5.75593e-07, -1.0, 0.0, -5.75593e-07, -1.0, 0.0),
		FloatArray(0.980785, -9.3182e-07, 0.19509, 1.0, 0.980785, -7.96888e-07, 0.19509, 1.0, 0.980785, -7.74958e-07, 0.19509, 1.0, 0.83147, -1.42582e-07, 0.55557, 1.0, 0.83147, -1.01986e-06, 0.55557, 1.0, 0.83147, -1.16244e-06, 0.55557, 1.0, 0.55557, -3.87479e-07, 0.83147, 1.0, 0.55557, -3.87479e-07, 0.83147, 1.0, 0.55557, -3.87479e-07, 0.83147, 1.0, 0.19509, 3.70856e-07, 0.980785, 1.0, 0.19509, -2.81459e-07, 0.980785, 1.0, 0.19509, -3.87479e-07, 0.980785, 1.0, -0.19509, 0.0, 0.980785, 1.0, -0.19509, 0.0, 0.980785, 1.0, -0.19509, 0.0, 0.980785, 1.0, -0.55557, 7.74958e-07, 0.83147, 1.0, -0.55557, 7.74958e-07, 0.831469, 1.0, -0.55557, 7.74958e-07, 0.831469, 1.0, -0.83147, 0.0, 0.55557, 1.0, -0.83147, 0.0, 0.55557, 1.0, -0.83147, 0.0, 0.55557, 1.0, -0.980785, 9.79265e-07, 0.19509, 1.0, -0.980785, 1.13683e-06, 0.19509, 1.0, -0.980785, 1.16244e-06, 0.19509, 1.0, -0.980785, 9.31738e-07, -0.19509, 1.0, -0.980785, 7.96877e-07, -0.19509, 1.0, -0.980785, 7.74958e-07, -0.19509, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.195091, -1.16244e-06, -0.980785, 1.0, 0.195091, -1.16244e-06, -0.980785, 1.0, 0.195091, -1.16244e-06, -0.980785, 1.0, 0.55557, -8.8421e-07, -0.831469, 1.0, 0.55557, -4.56925e-07, -0.831469, 1.0, 0.55557, -3.87479e-07, -0.831469, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.83147, -1.35012e-06, -0.55557, 1.0, 0.83147, -8.55369e-07, -0.55557, 1.0, 0.83147, -7.74958e-07, -0.55557, 1.0, 0.980785, -5.60882e-07, -0.19509, 1.0, 0.980785, -1.07834e-06, -0.19509, 1.0, 0.980785, -1.16244e-06, -0.19509, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.980785, -9.5375e-07, 0.19509, 1.0, 0.83147, 0.0, 0.55557, 1.0, 0.55557, -9.53656e-07, 0.83147, 1.0, 0.55557, -9.53656e-07, 0.83147, 1.0, 0.55557, -9.53656e-07, 0.83147, 1.0, 0.19509, 4.76875e-07, 0.980785, 1.0, -0.19509, 0.0, 0.980785, 1.0, -0.55557, 9.53657e-07, 0.83147, 1.0, -0.55557, 9.53656e-07, 0.83147, 1.0, -0.55557, 9.53657e-07, 0.83147, 1.0, -0.83147, 4.76876e-07, 0.55557, 1.0, -0.83147, 4.76876e-07, 0.55557, 1.0, -0.83147, 4.76876e-07, 0.55557, 1.0, -0.980785, 9.53657e-07, 0.19509, 1.0, -0.980785, 9.53657e-07, -0.19509, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.19509, -4.76875e-07, -0.980785, 1.0, 0.19509, -4.76875e-07, -0.980785, 1.0, 0.19509, -4.76875e-07, -0.980785, 1.0, 0.55557, -9.53656e-07, -0.831469, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.83147, -1.43053e-06, -0.55557, 1.0, 0.980785, -4.76781e-07, -0.19509, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.307716, 0.999937, 0.38463, 0.605692, 0.307717, 0.605692, 0.38463, 0.999937, 0.461544, 0.605692, 0.38463, 0.605692, 0.461543, 0.999937, 0.538457, 0.605692, 0.461544, 0.605692, 0.538457, 0.999937, 0.61537, 0.605692, 0.538457, 0.605692, 0.61537, 0.999937, 0.692284, 0.605692, 0.61537, 0.605692, 0.692284, 0.999937, 0.769197, 0.605692, 0.692284, 0.605692, 0.769197, 0.999937, 0.84611, 0.605692, 0.769197, 0.605692, 0.84611, 0.999937, 0.923024, 0.605692, 0.84611, 0.605692, 0.923024, 0.999937, 0.999937, 0.605692, 0.923024, 0.605692, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 6.2785e-05, 0.999937, 0.0769766, 0.605692, 6.31518e-05, 0.605692, 0.0769762, 0.999937, 0.15389, 0.605692, 0.0769766, 0.605692, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.15389, 0.999937, 0.230804, 0.605692, 0.15389, 0.605692, 0.230803, 0.999937, 0.307717, 0.605692, 0.230804, 0.605692, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.38463, 0.999937, 0.461543, 0.999937, 0.461543, 0.999937, 0.538457, 0.999937, 0.538457, 0.605692, 0.61537, 0.999937, 0.692284, 0.999937, 0.692284, 0.999937, 0.769197, 0.999937, 0.769197, 0.605692, 0.769197, 0.999937, 0.84611, 0.999937, 0.84611, 0.605692, 0.923024, 0.999937, 0.999937, 0.999937, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 6.2785e-05, 0.999937, 0.0769762, 0.999937, 0.0769766, 0.605692, 0.15389, 0.999937, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.230803, 0.999937, 0.307716, 0.999937, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 0, 1, 54, 3, 4, 55, 56, 58, 57, 9, 10, 59, 12, 13, 60, 61, 63, 62, 64, 66, 65, 21, 22, 67, 24, 25, 68, 69, 71, 70, 30, 31, 72, 33, 34, 73, 74, 76, 75, 39, 40, 77, 42, 79, 78, 79, 43, 80, 81, 83, 82, 84, 44, 85, 44, 87, 86, 87, 89, 88, 90, 92, 91, 93, 95, 94, 96, 89, 42, 42, 43, 79, 43, 44, 84, 97, 99, 98, 100, 102, 101, 45, 46, 103, 48, 49, 104, 105, 107, 106, 107, 105, 108, 108, 105, 109, 110, 112, 111, 113, 115, 114, 116, 109, 117, 117, 119, 118, 118, 119, 120, 120, 119, 121, 122, 124, 123, 125, 127, 126, 128, 130, 129, 105, 119, 109)
	],
	"morph_arrays":[]
}

[sub_resource id=4 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);
    transmission = transmission * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = transmission;
    ior = IOR;
}



void vertex() {
	
}


void fragment() {
	mat4 inverted_view_matrix;
	inverted_view_matrix = inverse(INV_CAMERA_MATRIX);
	mat4 inverted_model_matrix;
	inverted_model_matrix = inverse(WORLD_MATRIX);
	// node: Texture Coordinate
	// type: ShaderNodeTexCoord
	vec3 var1_Object;
	var1_Object = VERTEX;
	// convert from view space to model space
	var1_Object = (inverted_model_matrix * (inverted_view_matrix * vec4(var1_Object, 1.0))).xyz;
	// convert from y-up to z-up
	var1_Object = mat3(vec3(1, 0, 0), vec3(0, 0, 1), vec3(0, -1, 0)) * var1_Object;
	
	// node: Principled BSDF
	// type: ShaderNodeBsdfPrincipled
	vec4 var2_BaseColor;
	var2_BaseColor = vec4(0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0);
	float var3_Subsurface;
	var3_Subsurface = 0.0;
	vec4 var4_SubsurfaceColor;
	var4_SubsurfaceColor = vec4(0.699999988079071, 0.10000000149011612, 0.10000000149011612, 1.0);
	float var5_Metallic;
	var5_Metallic = 1.0;
	float var6_Specular;
	var6_Specular = 0.5;
	float var7_Roughness;
	var7_Roughness = 0.12921348214149475;
	float var8_Clearcoat;
	var8_Clearcoat = 0.0;
	float var9_ClearcoatRoughness;
	var9_ClearcoatRoughness = 0.029999999329447746;
	float var10_Anisotropic;
	var10_Anisotropic = 1.0;
	float var11_Transmission;
	var11_Transmission = 0.0;
	float var12_IOR;
	var12_IOR = 1.4500000476837158;
	vec3 var13_out_albedo;
	float var14_out_sss_strength;
	float var15_out_metallic;
	float var16_out_specular;
	float var17_out_roughness;
	float var18_out_clearcoat;
	float var19_out_clearcoat_gloss;
	float var20_out_anisotropy;
	float var21_out_transmission;
	float var22_out_ior;
	node_bsdf_principled(var2_BaseColor, var3_Subsurface, var4_SubsurfaceColor, var5_Metallic, var6_Specular, var7_Roughness, var8_Clearcoat, var9_ClearcoatRoughness, var10_Anisotropic, var11_Transmission, var12_IOR, var13_out_albedo, var14_out_sss_strength, var15_out_metallic, var16_out_specular, var17_out_roughness, var18_out_clearcoat, var19_out_clearcoat_gloss, var20_out_anisotropy, var21_out_transmission, var22_out_ior);
	// convert from z-up to y-up
	var1_Object = mat3(vec3(1, 0, 0), vec3(0, 0, -1), vec3(0, 1, 0)) * var1_Object;
	// convert from world space to view space
	var1_Object = normalize(INV_CAMERA_MATRIX * vec4(var1_Object, 0.0)).xyz;
	
	ALBEDO = var13_out_albedo;
	SSS_STRENGTH = var14_out_sss_strength;
	SPECULAR = var16_out_specular;
	METALLIC = var15_out_metallic;
	ROUGHNESS = var17_out_roughness;
	CLEARCOAT = var18_out_clearcoat;
	CLEARCOAT_GLOSS = var19_out_clearcoat_gloss;
	// transmission usually does not work..
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * var21_out_transmission;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = oren_nayar_rougness
	ANISOTROPY = var20_out_anisotropy;
	TANGENT = normalize(cross(cross(var1_Object, NORMAL), NORMAL));
	BINORMAL = cross(TANGENT, NORMAL);
}
"

[sub_resource id=5 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(4)

[sub_resource id=6 type="ArrayMesh"]

resource_name = "Cylinder001"
surfaces/0 = {
	"material":SubResource(5),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 1.0, -1.0, 0.382683, -1.0, -0.92388, 0.0, -1.0, -1.0, 0.382683, 1.0, -0.92388, 0.707107, -1.0, -0.707107, 0.382683, -1.0, -0.92388, 0.707107, 1.0, -0.707107, 0.92388, -1.0, -0.382683, 0.707107, -1.0, -0.707107, 0.92388, 1.0, -0.382683, 1.0, -1.0, 4.37114e-08, 0.92388, -1.0, -0.382683, 1.0, 1.0, 4.37114e-08, 0.92388, -1.0, 0.382684, 1.0, -1.0, 4.37114e-08, 0.92388, 1.0, 0.382684, 0.707107, -1.0, 0.707107, 0.92388, -1.0, 0.382684, 0.707107, 1.0, 0.707107, 0.382683, -1.0, 0.92388, 0.707107, -1.0, 0.707107, 0.382683, 1.0, 0.92388, 1.50996e-07, -1.0, 1.0, 0.382683, -1.0, 0.92388, 1.50996e-07, 1.0, 1.0, -0.382683, -1.0, 0.92388, 1.50996e-07, -1.0, 1.0, -0.382683, 1.0, 0.92388, -0.707107, -1.0, 0.707107, -0.382683, -1.0, 0.92388, -0.707107, 1.0, 0.707107, -0.92388, -1.0, 0.382684, -0.707107, -1.0, 0.707107, -0.92388, 1.0, 0.382684, -1.0, -1.0, -1.19249e-08, -0.92388, -1.0, 0.382684, -1.0, 1.0, -1.19249e-08, -0.923879, -1.0, -0.382684, -1.0, -1.0, -1.19249e-08, -0.923879, 1.0, -0.382684, -0.707107, -1.0, -0.707107, -0.923879, -1.0, -0.382684, 0.707107, 1.0, -0.707107, -0.707107, 1.0, -0.707107, -0.707107, 1.0, 0.707107, -0.707107, 1.0, -0.707107, -0.382683, -1.0, -0.92388, -0.707107, -1.0, -0.707107, -0.382683, 1.0, -0.92388, 0.0, -1.0, -1.0, -0.382683, -1.0, -0.92388, 0.92388, -1.0, -0.382683, 0.382683, -1.0, 0.92388, -0.92388, -1.0, 0.382684, 0.382683, 1.0, -0.92388, 0.707107, 1.0, -0.707107, 0.707107, 1.0, -0.707107, 0.92388, 1.0, -0.382683, 0.92388, -1.0, -0.382683, 1.0, 1.0, 4.37114e-08, 0.92388, 1.0, 0.382684, 0.92388, 1.0, 0.382684, 0.707107, 1.0, 0.707107, 0.707107, -1.0, 0.707107, 0.707107, 1.0, 0.707107, 0.382683, 1.0, 0.92388, 0.382683, -1.0, 0.92388, 1.50996e-07, 1.0, 1.0, -0.382683, 1.0, 0.92388, -0.382683, 1.0, 0.92388, -0.707107, 1.0, 0.707107, -0.707107, -1.0, 0.707107, -0.92388, 1.0, 0.382684, -1.0, 1.0, -1.19249e-08, -1.0, 1.0, -1.19249e-08, -0.923879, 1.0, -0.382684, -0.923879, -1.0, -0.382684, -0.707107, 1.0, -0.707107, 0.382683, 1.0, -0.92388, 0.0, 1.0, -1.0, -0.382683, 1.0, -0.92388, -0.707107, 1.0, -0.707107, -0.923879, 1.0, -0.382684, -1.0, 1.0, -1.19249e-08, -1.0, 1.0, -1.19249e-08, -0.92388, 1.0, 0.382684, -0.382683, 1.0, 0.92388, 1.50996e-07, 1.0, 1.0, 0.382683, 1.0, 0.92388, 0.707107, 1.0, 0.707107, 0.707107, 1.0, 0.707107, 0.92388, 1.0, 0.382684, 1.0, 1.0, 4.37114e-08, 1.0, 1.0, 4.37114e-08, 0.92388, 1.0, -0.382683, 0.707107, 1.0, 0.707107, 0.92388, 1.0, -0.382683, -0.707107, 1.0, 0.707107, 1.50996e-07, 1.0, 1.0, 0.707107, 1.0, -0.707107, 1.50996e-07, 1.0, 1.0, 0.707107, 1.0, 0.707107, 0.707107, 1.0, -0.707107, -0.382683, 1.0, -0.92388, 0.0, 1.0, -1.0, -0.382683, -1.0, -0.92388, 0.0, -1.0, -1.0, 0.382683, -1.0, -0.92388, 0.707107, -1.0, -0.707107, 0.92388, -1.0, -0.382683, 0.92388, -1.0, -0.382683, 1.0, -1.0, 4.37114e-08, 0.92388, -1.0, 0.382684, 0.92388, -1.0, 0.382684, 0.707107, -1.0, 0.707107, 0.92388, -1.0, -0.382683, 0.707107, -1.0, 0.707107, 0.382683, -1.0, 0.92388, 1.50996e-07, -1.0, 1.0, -0.92388, -1.0, 0.382684, -0.382683, -1.0, 0.92388, -0.707107, -1.0, 0.707107, -0.92388, -1.0, 0.382684, -1.0, -1.0, -1.19249e-08, -0.923879, -1.0, -0.382684, -0.923879, -1.0, -0.382684, -0.707107, -1.0, -0.707107, -0.382683, -1.0, -0.92388, -0.92388, -1.0, 0.382684, -0.923879, -1.0, -0.382684, -0.382683, -1.0, -0.92388),
		Vector3Array(0.19509, 0.0, -0.980785, 0.19509, 0.0, -0.980785, 0.19509, 0.0, -0.980785, 0.55557, 0.0, -0.83147, 0.55557, 0.0, -0.83147, 0.55557, 0.0, -0.83147, 0.83147, 0.0, -0.55557, 0.83147, 0.0, -0.55557, 0.83147, 0.0, -0.55557, 0.980785, 0.0, -0.19509, 0.980785, 0.0, -0.19509, 0.980785, 0.0, -0.19509, 0.980785, 0.0, 0.19509, 0.980785, 0.0, 0.19509, 0.980785, 0.0, 0.19509, 0.831469, 0.0, 0.55557, 0.831469, 0.0, 0.55557, 0.831469, 0.0, 0.55557, 0.55557, 0.0, 0.83147, 0.55557, 0.0, 0.83147, 0.55557, 0.0, 0.83147, 0.19509, 0.0, 0.980785, 0.19509, 0.0, 0.980785, 0.19509, 0.0, 0.980785, -0.19509, 0.0, 0.980785, -0.19509, 0.0, 0.980785, -0.19509, 0.0, 0.980785, -0.55557, 0.0, 0.83147, -0.55557, 0.0, 0.83147, -0.55557, 0.0, 0.83147, -0.831469, 0.0, 0.55557, -0.831469, 0.0, 0.55557, -0.831469, 0.0, 0.55557, -0.980785, 0.0, 0.19509, -0.980785, 0.0, 0.19509, -0.980785, 0.0, 0.19509, -0.980785, 0.0, -0.195091, -0.980785, 0.0, -0.195091, -0.980785, 0.0, -0.195091, -0.831469, 0.0, -0.55557, -0.831469, 0.0, -0.55557, -0.831469, 0.0, -0.55557, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -0.55557, 0.0, -0.83147, -0.55557, 0.0, -0.83147, -0.55557, 0.0, -0.83147, -0.19509, 0.0, -0.980785, -0.19509, 0.0, -0.980785, -0.19509, 0.0, -0.980785, 5.96046e-08, -1.0, 0.0, 5.96046e-08, -1.0, 0.0, 5.96046e-08, -1.0, 0.0, 0.19509, 0.0, -0.980785, 0.55557, 0.0, -0.83147, 0.83147, 0.0, -0.55557, 0.83147, 0.0, -0.55557, 0.83147, 0.0, -0.55557, 0.980785, 0.0, -0.19509, 0.980785, 0.0, 0.19509, 0.83147, 0.0, 0.55557, 0.83147, 0.0, 0.55557, 0.83147, 0.0, 0.55557, 0.55557, 0.0, 0.83147, 0.55557, 0.0, 0.83147, 0.55557, 0.0, 0.83147, 0.19509, 0.0, 0.980785, -0.19509, 0.0, 0.980785, -0.55557, 0.0, 0.83147, -0.55557, 0.0, 0.83147, -0.55557, 0.0, 0.83147, -0.831469, 0.0, 0.55557, -0.980785, 0.0, 0.19509, -0.980785, 0.0, -0.19509, -0.980785, 0.0, -0.19509, -0.980785, 0.0, -0.19509, -0.831469, 0.0, -0.55557, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.02308e-06, 1.0, 0.0, -1.02308e-06, 1.0, 0.0, -1.02308e-06, 1.0, 0.0, 1.43703e-06, 1.0, 0.0, 1.43703e-06, 1.0, 0.0, 1.43703e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 2.38419e-07, 1.0, 0.0, 2.38419e-07, 1.0, 0.0, 2.38419e-07, 1.0, 0.0, -0.55557, 0.0, -0.83147, -0.19509, 0.0, -0.980785, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.02308e-06, -1.0, 0.0, -1.02308e-06, -1.0, 0.0, -1.02308e-06, -1.0, 0.0, 1.43703e-06, -1.0, 0.0, 1.43703e-06, -1.0, 0.0, 1.43703e-06, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, 1.02308e-06, -1.0, 0.0, -5.75593e-07, -1.0, 0.0, -5.75593e-07, -1.0, 0.0, -5.75593e-07, -1.0, 0.0),
		null, ; No Tangents,
		null, ; no Vertex Colors,
		null, ; No UV1,
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 0, 1, 54, 3, 4, 55, 56, 58, 57, 9, 10, 59, 12, 13, 60, 61, 63, 62, 64, 66, 65, 21, 22, 67, 24, 25, 68, 69, 71, 70, 30, 31, 72, 33, 34, 73, 74, 76, 75, 39, 40, 77, 42, 79, 78, 79, 43, 80, 81, 83, 82, 84, 44, 85, 44, 87, 86, 87, 89, 88, 90, 92, 91, 93, 95, 94, 96, 89, 42, 42, 43, 79, 43, 44, 84, 97, 99, 98, 100, 102, 101, 45, 46, 103, 48, 49, 104, 105, 107, 106, 107, 105, 108, 108, 105, 109, 110, 112, 111, 113, 115, 114, 116, 109, 117, 117, 119, 118, 118, 119, 120, 120, 119, 121, 122, 124, 123, 125, 127, 126, 128, 130, 129, 105, 119, 109)
	],
	"morph_arrays":[]
}
[node type="Spatial" name="Scene"]


[node name="Point" type="DirectionalLight" parent="."]

light_energy = 1.0
light_color = Color(1.0, 1.0, 1.0, 1.0)
transform = Transform(0.701062, -0.562597, -0.438174, 0.452107, -0.124517, 0.88323, -0.551463, -0.8173, 0.16706, -2.09735, 4.28268, -0.137035)
shadow_enabled = true
light_negative = false

[node name="object_with_uv" type="MeshInstance" parent="."]

mesh = SubResource(3)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 0.727657, 0.0, 0.0, 0.0, 1.0, -0.0202641, 0.726183, 0.0182136)

[node name="object_without_uv" type="MeshInstance" parent="."]

mesh = SubResource(6)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 0.727657, 0.0, 0.0, 0.0, 1.0, 3.13899, 0.726183, 0.0182136)
